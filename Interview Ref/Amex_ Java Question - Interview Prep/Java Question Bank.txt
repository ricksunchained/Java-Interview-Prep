
Java8 core technical concept  -  
Spring boot :-  
Rest API :-  
Microservices :-  
Problem solving (program ) skill  ( e.g. https://www.geeksforgeeks.org/given-sorted-array-number-x-find-pair-array-whose-sum-closest-x/)
Sprint Hibernate
SQL CICD, git, branching strategies and Peripheral concept :

--------------------------
spring microservices  question:

 1 what is diffirence between BeanFactory and Application Context?
 2  What are the scope of beans
 3 what is spring Framwork
 4 advantages of spring framwork
 5 what the feature of spring mvc



1. Java 8 Features

"apple","apple","orange","orange", "pineapple"

2. Print count of each element of the above list.
3. Print length of each element of the above list.
4. Multithreading  and Future Class
5. HashMap 
6. Git
7. Jenkins and deployment  steps
8. difference between recursion and iteration
9. Spring Security
10. Synchronous and Asynchronous communication
11. Springboot exception handling



java 8 : 
 1 What are feature of Java8
 2  What is Functional Interface?
 3 Why we use FunctionInterface annotation?
 4 What is Stream api? 
5 what are intermediant  stream operation
6 can we override static method ?

Java Program 
Write java program for Palindrom String containing many words check if it is palindrom,write optimise program


--------------sourabh------------
- introduce yourself
- explain last project and your roles and responsibilities
- write program for checking string palindrome
- refactor same program
- difference between sleep and wait method
- any experience in open source technology

--------------tajamul---------------------- 
- introduce yourself
- explain last project and your roles and responsibilities
- what type of defects you fixed
- write program to reverse integer array without using different array / collection.






=================================Sreeni==========================================

questions based on string manipulationInternal
 working of hashmap Internal 
 working of  treemap and 
 time complexity with example 
 how you test your apiSpring security,
  how to secure rest API.
How to debug your application 
Examples:
Input: arr[] = {10,22, 28, 30, 40}, x= 54
Output: 52
Explanation:  If we calculate the sum of the output closest macth of the x
How treemap works internally
Why String constent pool is available in java  

Raghu: https://www.geeksforgeeks.org/given-sorted-array-number-x-find-pair-array-whose-sum-closest-x/

=================================Drupad==========================================
Stream terminal operation or intermediate operation
Reduce flat map. FlatMap vs Reduce for mapping and filtering 
Convert list into a map
There is Radom string find a pattern in that string
how to make Async API Call
Design pattern
Executor framework
best way to implement Thread
HashMap internal implementation




introduce yourself with technologies you have worked on.
- Design patterns
- Write a program for singleton class
-what is String, explain in details
- questions based on string manipulation
- what is GC.
- Stack overflow, outofmemmory errors.
- how GC woks and it's importance.
- Multithreading
-why spring, features of spring.
-dependency injection and it's type
- spring/spring boot annotations
- Spring security, how to secure rest API.
-SQL queries, Joins


=================================Arun & linus ==========================================

1. Java 8 questions - Stream api and lamda expressions related questions
2. Difference between map and flatmap?
3. Spring annotations and its use?
4. Previous project architecture and explanation?
5. Collection api related questions?
6. using given array of elements.. sort and display the rank of students

===========================================================================
1 roles and responsibilities
2.api security
3.multithreading
4.spring and spring boot - which one is better and usage of apringboot
5.wap to print even no from 1 to 20
Optimise it without using i%2==0
Optimise it such that it will work in O(1)

===================================================Arun========================
Roles and Responsibility in the previous projectSpring
 Boot FeaturesSpring Boot 
 securityMultithreading and Thread Pool
 How to debug an error in spring boot applicationHow to scale your application for increase in demand

Program to print even numbers in the range 1 to 20

public class EvenNumbers {

               public static void printEvenNumbers(int n) {
                              
                              System.out.println("Even Numbers from 1 to " + n + ":");
                              int i=1;
                              
                              while(i <= n){
                                             if(i % 2 == 0)
                                                            System.out.print(" " + i);
                                             
                                             i++;
                              }
                              // IntStream.range(1, n+1 ).filter(n -> n % 2 == 0).forEach(System.out::println);
               }
               public static void main(String args[]) {
                              int n = 20;
                              printEvenNumbers(n);
               }
}
 


=============================Linus==============================================
1.There are 10 records to be inserted using workflow, what happens to the records which are yet to be inserted but workflow is down.
How do we handle such scenarios.

2.POST and PUT which is idempotent in nature?
PUT is idempotent.

3.what are the types in which a GET API can be invoked?
Through path variable and request param

4.Internal implementation of HashMap

5.Why SET does not allow duplicate entries
Because it uses hashMap internally to store data.

6.Mutable and immutable differences.

7.string, StringBuffer and StringBuilder differences.

8.Singleton pattern to demonstate

9.How to sort hashmap if we have object as a key?

=============================Saurabh + ==============================================
1 - Roles and responsibility in previous organization
2 - Functional Programming
3 - Throwing exception from stream or lambda expression
4 - Factorial Program
5 - JUnit
6 - Performance Testing
7 - Hashmap
8 - Stream
9 - Basic java concepts
10 - CI/CD Pipeline
11 - Vertex
12 - Spring Security and its implementation in securing API 



=============================Rajendra M==============================================
What was your role in the previous organization.
What difficulties you faced and how you overcame it.
what technologies and frameworks you used 
how to scale your application/apis for increased demand.
how to secure you apis
what is use of threadpool
how you used multithreading
Program: print even number in the range (1,20)
what are streams

=============================Sreeni==============================================

Inroduce your self and the technologies have been working so far.
What was the roles and responsibility in the previous project.
What was the most challenging task in the last project and how you over come it.
Java Progam:
   write bullet froof method which takes list as a parameter which contaig the string data and the output of that method is list which only contains those string which has length more than 20.

How the above method will handle exceptions.
How can you writer the j unit of the above method.
What is the  multithreading concept how you can implement it.
Java 8 concept.



=============================Raj==============================================

1.Explain my previous Projects role and development flow
2. is any issue(bug,problem) solve during working time in project Explain it
Java 8 Core concepts
1. Predicate real time use scenario
2. Stream real time use scenario
Spring Boot

Problem Solving (programm)
1. print even numbers upto 20 by using for loop/ Java 8 (i explain by using lambda)

 


=============================answer==============================================



 From integer array, find the maximum sum of 3 consecutive numbers like 

Ans : class ConsecutiveNumberSum {
public static void main(String[] args) {
int s [] = {11,21,3,4,2,100,110};
int sum = 0;
for(int i =0; i<=s.length-3; i++){
int currentSum = s[i] + s[i+1]+ s[i+2];
if(sum < currentSum){
sum = currentSum;
}
}
System.out.println("Highest Sum :" +sum);
}
}

2. How will you create REST API for above code?
Ans : In RestController, I will add @Postmapping("/max-sum")
Then, call service layer and there do above calculation and return result to controller.
From controller, given response to client.

3. AMEX is working on Java 11 so please share new feature in Java 11

3. Explain packaging and deployment
Ans : From spring boot project we can use gradle for packaging and will get jar file for deployment.

4. Explain about security to REST API.
Ans : Following Role based Security, First authentication will be done and then will get token in response. 
Using that token we can identify role and then it's access rights.

5. How will you optimize of application vertically?
Ans : Add multiple App server so that multiple requests can be serviced well. We can keep minimum count of App servers 
as per out load and scale it up as per requirement whenever needed. e.g. Suppose there is sudden increase in no. of request and we have less app servers and those are fully occupied
and out load balancer can not send more request to existing app servers then on demand we can spin up more app servers as per need and once need is fulfilled and request are less 
then we can turn them down.

6. How to mitigate attacks?
Ans : If there are invalid request are coming in then one layer of our application will filter it out and we can accept only valid request by recognizing the expected pattern.
	  And also we can block that source from where requests are coming in.

7. How to create One To Many Relationship?

8. Explain unit test cases and how will you write it?
Ans : Explain different test cases for above code. Explain about Junit and mockito framework.

9. In spring boot how to ensure test are invoked?
Ans : Mention test repository in gradle/pom file.

10. How to support transactions?
Ans : Using @Transactional will be  helpful to handle transactions. Also need to mention datasource alsong with it as different db support transactions different way.

11. How to debug production issues?
Ans : By looking at the logs or by checking the behaviour of the requests made by particular user.

12. What is tracing?
Ans : Tracing is tracking a particular transaction/request from a user. At start of application we can given an id to request and then we can track that particular transaction.

13. What is OutOfMemory Error?
Ans : This error is thrown when there is insufficient space to allocate an object in the Java heap.

14. Check if a pair exists with given
Given an array A[] of n numbers and another number x, the task is to check whether or not there exist two elements in A[] whose sum is exactly x.

Examples:
Input: arr[] = {0, -1, 2, -3, 1}, x= -2
Output: Yes
Explanation:  If we calculate the sum of the output,1 + (-3) = -2

Input: arr[] = {1, -2, 1, 0, 5}, x = 0
Output: No
public class Tst1 {

==========================solution=================================================

   public static boolean m1(int[] A,int size, int y){
        for(int i=0; i<(size-1);i++){
            for(int j=(i+1); j<size;j++){
                if(A[i]+A[j]==y){
                    return true;
                    
                    
                }
            }
            
        }
        return false;
        
    }
    
    public static void main(String[] args) {
        
        int[] A={1, -2, 1, 0, 5};
        int y =0;
        int size = A.length;
        if(m1(A,size,y)){
            System.out.println("yes");
            
        }else{
            System.out.println("No");
        }
    }
}

